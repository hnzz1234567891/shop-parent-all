<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation=" 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd ">
        
    <!-- 静态资源文件的处理-->
    <mvc:default-servlet-handler/>
	<!-- 静态资源文件的处理 二 
	<mvc:resources mapping="/css/**" location="/css/" />-->

	<!-- 引入jdbc.properties属性文件方便数据源的配置 -->
    <context:property-placeholder location="classpath:jdbc.properties,classpath:config.properties, classpath:rabbitmq.properties" />
	<!-- 扫描package方便注解依赖注入-->
	<context:component-scan base-package="com.shop" />
	
	<mvc:annotation-driven />
	<!-- 定时任务的注解驱动 -->
	<task:annotation-driven />
	<!-- 启动Spring aspectj注解 -->
	<aop:aspectj-autoproxy />
	
	<!-- 视图配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="number_format">0.######</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="tag_syntax">square_bracket</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
			</props>
		</property>
		
		<property name="freemarkerVariables">
			
			<map>
				<entry key="navigation_list" value-ref="navigationDirective" />
				<entry key="hot_search_keywords" value-ref="hotSearchKeywordsDirective" />
				<entry key="product_category_root_list" value-ref="productCategoryRootListDirective" />
				<entry key="product_category_children_list" value-ref="productCategoryChildrenListDirective" />
				<entry key="brand_list" value-ref="brandListDirective" />
				<entry key="promotion_list" value-ref="promotionListDirective" />
				<entry key="ad_position" value-ref="adPositionDirective" />
				<entry key="ad_list" value-ref="adDirective" />
				<entry key="article_category_root_list" value-ref="articleCategoryRootListDirective" />
				<entry key="article_list" value-ref="articleListDirective" />
				<entry key="goods_list" value-ref="goodsListDirective" />
				<entry key="friend_link_list" value-ref="friendLinkListDirective" />
				<entry key="product_category_parent_list" value-ref="productCategoryParentListDirective" />
				<entry key="attribute_list" value-ref="attributeDirective" />
				
			</map>
		</property>
		
	</bean>
	
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>
	
	<mvc:annotation-driven>
	   <mvc:message-converters>
	       <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	       <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	   </mvc:message-converters>
	</mvc:annotation-driven>
	
	<!--图片验证码配置 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">yes</prop><!--是否有边框 -->
						<prop key="kaptcha.border.color">105,179,90</prop><!--设置边框颜色 -->
						<prop key="kaptcha.textproducer.font.color">green</prop><!--验证码文本字符颜色 默认为Color.BLACK -->
						<prop key="kaptcha.session.key">code</prop><!--验证码 -->
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop><!--设置字体样式 -->
						<prop key="kaptcha.border.thickness"></prop><!--边框粗细度 默认为1 -->
						<prop key="kaptcha.producer.impl"></prop><!--验证码生成器 默认为DefaultKaptcha -->
						<prop key="kaptcha.textproducer.impl"></prop><!-- 验证码文本生成器 默认为DefaultTextCreator -->
						<prop key="kaptcha.textproducer.char.string"></prop><!--验证码文本字符内容范围 默认为abcde2345678gfynmnpwx -->
						<prop key="kaptcha.textproducer.char.length">4</prop><!-- 验证码文本字符长度 默认为5 -->
						<prop key="kaptcha.textproducer.font.size">50</prop><!--验证码文本字符大小 默认为40 -->
						<prop key="kaptcha.textproducer.char.space">6</prop>    <!--验证码文本字符间距 默认为2 -->
						<prop key="kaptcha.image.width">200</prop>    <!--验证码图片宽度 默认为200 -->
						<prop key="kaptcha.image.height">60</prop> <!--验证码图片高度 默认为40 -->
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!--rabbitmq配置-->
	<!-- connection factory -->
	<rabbit:connection-factory id="connectionFactory" host="${rabbitmq.host}" port="${rabbitmq.port}"
							   username="${rabbitmq.username}" password="${rabbitmq.password}" virtual-host="${rabbitmq.vhost}" />

	<!-- template -->
	<rabbit:template id="rabbitTemplate" exchange="${sms.exchange}"
					 routing-key="${sms.routing.key}" connection-factory="connectionFactory" />

	<!-- rabbit admin -->
	<rabbit:admin id="rabbitAdmin" connection-factory="connectionFactory" />

	<!-- queue -->
	<rabbit:queue id="queue" name="${sms.queue}" durable="true"
				  exclusive="false" auto-delete="false" />

	<!-- Exchange -->
	<rabbit:direct-exchange  name="${sms.exchange}" durable="true">
		<rabbit:bindings>
			<rabbit:binding key="${sms.routing.key}" queue="queue" />
		</rabbit:bindings>
	</rabbit:direct-exchange>


	<!-- redis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMills}" />
	</bean>

	<bean id="jedisConnectionFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.masterHost}" />
		<property name="port" value="${redis.masterPort}" />
		<property name="password" value="${redis.masterPassword}" />
		<property name="timeout" value="${redis.timeout}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="usePool" value="true" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<!-- session redis -->
	<bean id="redisHttpSessionConfiguration"
		  class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="1800" />
	</bean>

</beans>

